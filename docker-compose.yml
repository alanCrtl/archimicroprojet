version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: kafka_postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: coordonnee
    networks:
      - kafka_net
            
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_net

  kafka-broker:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL_SAME_HOST://0.0.0.0:29092,EXTERNAL_DIFFERENT_HOST://0.0.0.0:29093,
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092,EXTERNAL_DIFFERENT_HOST://172.12.0.1:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT,EXTERNAL_DIFFERENT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "coordinates:10:1"
      
    networks:
      - kafka_net

  front :
    build: ./front
    image: kafka_front
    container_name: kafka_front_container
    ports: 
      - "4200:4200"
    volumes :
      - ./front:/app
    command: ng serve --host 0.0.0.0
    networks:
      - kafka_net
    depends_on:
      - api

  api:
    build: ./api
    image: kafka_api
    container_name: kafka_api_container
    ports:
        - "8000:8000"
    volumes:
        - ./api:/app
    networks:
      - kafka_net
    restart: on-failure
    depends_on:
      - postgres

networks:
  kafka_net:
    driver: bridge
